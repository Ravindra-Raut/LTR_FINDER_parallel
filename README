### ~ ~ ~ Run LTR_FINDER in parallel ~ ~ ~
This is a Perl wrapper for LTR_FINEDR

## Installation: No need. Just download and run.

Date: 09/19/2018
Update: 05/25/2019

Usage: perl LTR_FINDER_parallel -seq [file] -size [int] -threads [int]
Options:        -seq    [file]  Specify the sequence file.
                -size   [int]   Specify the size you want to split the genome sequence.
                                Please make it large enough to avoid spliting too many LTR elements. Default 5000000 (bp)
                -time   [int]   Specify the maximum time to run a subregion (a thread).
                                This helps to skip simple repeat regions that take a substantial of time to run. Default: 1500 (seconds).
                                Suggestion: 300 for -size 1000000. Increase -time when -size increased.
                -try1   [0|1]   If a region requires more time than the specified -time (timeout), decide:
                                        0, discard the entire region.
                                        1, further split to 50 Kb regions to salvage LTR candidates (default);
                -harvest_out    Output LTRharvest format if specified. Default: output LTR_FINDER table format.
                -next           Only summarize the results for previous jobs without rerunning LTR_FINDER (for -v).
                -verbose|-v     Retain LTR_FINDER outputs for each sequence piece.
                -cut    [file]  The path to the program cut.pl to split the sequence.
                -finder [file]  The path to the program LTR_FINDER.
                -threads|-t     [int]   Indicate how many CPU/threads you want to run LTR_FINDER.

